init_config:
  # Global configuration settings

instances:
  # First database instance
  - host: localhost
    port: 5432
    username: datadog
    password: <PASSWORD>
    dbname: database1
    min_collection_interval: 60  # Collection interval in seconds
    timezone: UTC  # Explicitly set timezone for time-based queries
    ssl: allow  # Options: disable, allow, prefer, require, verify-ca, verify-full
    ssl_root_cert: <SSL_ROOT_CERT>  # Path to the ssl root certificate
    ssl_cert: <SSL_CERT>  # Path to the ssl certificate
    ssl_key: <SSL_KEY>  # Path to the ssl client key
    ssl_password: <SSL_PASSWORD>  # Password for the ssl key if encrypted
    tags:
      - environment:production
      - service:postgres-main
    queries:
      # Example query to monitor active connections with time window
      - query: |
          SELECT count(*) as active_connections
          FROM pg_stat_activity
          WHERE state = 'active'
          AND current_timestamp AT TIME ZONE 'America/New_York' >= NOW() - interval '5 minutes'          
        metric_name: active_connections_last_5min
        type: gauge
        tags:
          - metric_type:performance
          - query:active_connections

      # Example query to monitor transaction rate with explicit time handling
      - query: |
          WITH rates AS (
            SELECT 
              (xact_commit + xact_rollback) as total_transactions,
              extract(epoch from now()) - extract(epoch from stats_reset) as time_period
            FROM pg_stat_database
            WHERE datname = current_database()
          )
          SELECT 
            CASE 
              WHEN time_period > 0 THEN total_transactions / time_period
              ELSE 0
            END as transactions_per_second
          FROM rates          
        metric_name: transaction_rate
        type: gauge
        tags:
          - metric_type:throughput
          - query:transaction_rate

  # Second database instance example
  - host: db2.example.com
    port: 5432
    username: datadog
    password: <PASSWORD>
    dbname: database2
    min_collection_interval: 60  # Collection interval in seconds
    timezone: UTC  # Explicitly set timezone for time-based queries
    tags:
      - environment:staging
      - service:postgres-secondary
    queries:
      # Query for monitoring slow queries with time window
      - query: |
          SELECT count(*) as slow_queries
          FROM pg_stat_activity
          WHERE state = 'active'
          AND current_timestamp - query_start > interval '30 seconds'          
        metric_name: slow_queries_count
        type: gauge
        tags:
          - metric_type:performance
          - threshold:30sec
